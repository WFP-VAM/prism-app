version: 2.1
on:
  pull_request:

jobs:
  frontend_tests:
    docker:
      - image: circleci/node:16.13.1-browsers

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install
      
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: yarn test
      - run: yarn lint

  frontend_build_and_deploy:
    docker:
      - image: circleci/node:16.13.1-browsers

    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: 
          name: build frontend
          command: GENERATE_SOURCEMAP=false yarn build
      - run:
          name: deploy on surge
          command: yarn deploy:surge --domain "prism-${PR_NUMBER}-${CIRCLE_PR_USERNAME}.surge.sh"

  build_api:
    machine:
      image: ubuntu-2004:202201-02
    steps:
      - checkout

      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: Build containers
          command: cd api-flask && docker-compose build api
      - run:
          name: Run linters
          command: cd api-flask && make api-lint
      - run:
          name: Run tests
          command: cd api-flask && make api-test

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - frontend_tests
      - frontend_build_and_deploy:
          requires:
            - frontend_tests
      - build_api